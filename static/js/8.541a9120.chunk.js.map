{"version":3,"sources":["pages/calendarTeam.js"],"names":["CalendarTeamPage","location","history","matchesByTeam","useSelector","state","global","matches","byTeam","shallowEqual","useState","queryString","parse","search","dateFilter","setDateFilter","dispatch","useDispatch","id","useParams","handleUrl","parsed","updateUrl","seasonDates","useMemo","getDates","collection","useEffect","getAllMatchesByTeam","className","onDateSelect","dateFrom","dateTo","disabledArea","onClick","bind","list"],"mappings":"oOAmDeA,UAxCU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAC7BC,EAAgBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,QAAQC,SAAQC,KADxB,EAEZC,mBAASC,IAAYC,MAAMX,EAASY,SAFxB,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAG1CC,EAAWC,cACTC,EAAOC,cAAPD,GAEFE,EAAY,SAACC,GACjBC,YAAUD,EAAQnB,EAASD,GAC3Bc,EAAc,eAAKM,KAGfE,EAAcC,mBAAQ,kBAAMC,YAAStB,EAAcuB,cAAa,CAACvB,EAAcuB,aASrF,OAFAC,qBAAU,kBAAMX,EAASY,YAAoBV,EAAIJ,MAAa,CAACI,EAAIF,EAAUF,IAG3E,eAAC,IAAD,WACE,oBAAIe,UAAU,cAAd,2BAEA,iDAAoBN,EAAY,MAChC,+CAAkBA,EAAY,MAC9B,qBAAKM,UAAU,gCAAf,SAEE,cAAC,IAAD,CAAYC,aAfG,SAACC,EAAUC,GAC9B,IAAMX,EAAM,2BAAQV,IAAYC,MAAMX,EAASY,SAAnC,IAA4CkB,WAAUC,WAClEZ,EAAUC,IAakCY,aAAcV,MAExD,qBAAKM,UAAU,cAAf,SACE,sBAAMK,QAASd,EAAUe,KAAK,KAAM,MAApC,4BAIF,cAAC,IAAD,CAAOC,KAAMjC,EAAcuB","file":"static/js/8.541a9120.chunk.js","sourcesContent":["import { useEffect, useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport queryString from 'query-string';\n\nimport { getAllMatchesByTeam } from '../store/global/actions/matches';\nimport { DatePicker, Table } from '../components';\nimport { getDates, updateUrl } from '../utils';\nimport { SPage } from '../styles';\n\n\nconst CalendarTeamPage = ({location, history}) => {\n  const matchesByTeam = useSelector(state => state.global.matches.byTeam, shallowEqual);\n  const [dateFilter, setDateFilter] = useState(queryString.parse(location.search));\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const handleUrl = (parsed) => {\n    updateUrl(parsed, history, location);\n    setDateFilter({ ...parsed })\n  }\n\n  const seasonDates = useMemo(() => getDates(matchesByTeam.collection), [matchesByTeam.collection])\n\n  const onDateSelect = (dateFrom, dateTo) => {\n    const parsed = { ...queryString.parse(location.search), dateFrom, dateTo };\n    handleUrl(parsed);\n  }\n\n  useEffect(() => dispatch(getAllMatchesByTeam(id, dateFilter)),[id, dispatch, dateFilter]);\n\n  return (\n    <SPage>\n      <h1 className='page__title'>Calendar Team</h1>\n     \n      <h2>Season starts: {seasonDates[0]}</h2>\n      <h2>Season ends: {seasonDates[1]}</h2>\n      <div className='page__panel page__panel--team'>\n        \n        <DatePicker onDateSelect={onDateSelect} disabledArea={seasonDates} />\n      </div>\n      <div className='page__reset'>\n        <span onClick={handleUrl.bind(null, null)}>\n          Reset filter\n        </span>\n      </div>\n      <Table list={matchesByTeam.collection} />\n    </SPage>\n  )\n}\n\nexport default CalendarTeamPage;"],"sourceRoot":""}