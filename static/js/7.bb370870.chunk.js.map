{"version":3,"sources":["pages/calendarLeague.js"],"names":["CalendarLeaguePage","location","history","matchesByLeague","useSelector","state","global","matches","byLeague","shallowEqual","useState","queryString","parse","search","dateFilter","setDateFilter","dispatch","useDispatch","id","useParams","handleUrl","parsed","updateUrl","seasonDates","useMemo","getDates","collection","useEffect","getAllMatchesByLeague","className","onSeasonSelect","season","onDateSelect","dateFrom","dateTo","disabledArea","onClick","bind","list"],"mappings":"oOAwDeA,UA9CY,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAC/BC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,QAAQC,WAAUC,KAD1B,EAEdC,mBAASC,IAAYC,MAAMX,EAASY,SAFtB,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAG5CC,EAAWC,cACTC,EAAOC,cAAPD,GAEFE,EAAY,SAACC,GACjBC,YAAUD,EAAQnB,EAASD,GAC3Bc,EAAc,eAAKM,KAGfE,EAAcC,mBAAQ,kBAAMC,YAAStB,EAAgBuB,cAAa,CAACvB,EAAgBuB,aAczF,OAFAC,qBAAU,kBAAMX,EAASY,YAAsBV,EAAIJ,MAAa,CAACI,EAAIF,EAAUF,IAG7E,eAAC,IAAD,WACE,oBAAIe,UAAU,cAAd,6BACA,iDAAoBN,EAAY,MAChC,+CAAkBA,EAAY,MAC9B,sBAAKM,UAAU,cAAf,UACE,cAAC,IAAD,CAAcC,eAbC,SAACC,GACpB,IAAMV,EAAM,2BAAQV,IAAYC,MAAMX,EAASY,SAAnC,IAA4CkB,WACxDX,EAAUC,MAYN,cAAC,IAAD,CAAYW,aAnBG,SAACC,EAAUC,GAC9B,IAAMb,EAAM,2BAAQV,IAAYC,MAAMX,EAASY,SAAnC,IAA4CoB,WAAUC,WAClEd,EAAUC,IAiBkCc,aAAcZ,OAExD,qBACEM,UAAU,cADZ,SAGE,sBAAMO,QAAShB,EAAUiB,KAAK,KAAM,MAApC,4BAIF,cAAC,IAAD,CAAOC,KAAMnC,EAAgBuB","file":"static/js/7.bb370870.chunk.js","sourcesContent":["import { useEffect, useState, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport queryString from 'query-string';\n\nimport { getAllMatchesByLeague } from '../store/global/actions/matches';\nimport { DatePicker, CustomSelect, Table } from '../components';\nimport { getDates, updateUrl } from '../utils';\nimport { SPage } from '../styles';\n\nconst CalendarLeaguePage = ({location, history}) => {\n  const matchesByLeague = useSelector(state => state.global.matches.byLeague, shallowEqual);\n  const [dateFilter, setDateFilter] = useState(queryString.parse(location.search));\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const handleUrl = (parsed) => {\n    updateUrl(parsed, history, location);\n    setDateFilter({ ...parsed })\n  }\n\n  const seasonDates = useMemo(() => getDates(matchesByLeague.collection), [matchesByLeague.collection])\n\n  const onDateSelect = (dateFrom, dateTo) => {\n    const parsed = { ...queryString.parse(location.search), dateFrom, dateTo };\n    handleUrl(parsed);\n  }\n\n  const seasonSelect = (season) => {\n    const parsed = { ...queryString.parse(location.search), season };\n    handleUrl(parsed);\n  }\n\n  useEffect(() => dispatch(getAllMatchesByLeague(id, dateFilter)),[id, dispatch, dateFilter]);\n\n  return (\n    <SPage>\n      <h1 className='page__title'>Calendar League</h1>\n      <h2>Season starts: {seasonDates[0]}</h2>\n      <h2>Season ends: {seasonDates[1]}</h2>\n      <div className='page__panel'>\n        <CustomSelect onSeasonSelect={seasonSelect} />\n        <DatePicker onDateSelect={onDateSelect} disabledArea={seasonDates} />\n      </div>\n      <div\n        className='page__reset'   \n      >\n        <span onClick={handleUrl.bind(null, null)}>\n          Reset filter\n        </span>\n      </div>\n      <Table list={matchesByLeague.collection} />\n    </SPage>\n  )\n}\n\nexport default CalendarLeaguePage;"],"sourceRoot":""}